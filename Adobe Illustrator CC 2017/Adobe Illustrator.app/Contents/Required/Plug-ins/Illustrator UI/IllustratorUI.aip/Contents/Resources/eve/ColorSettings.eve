layout ColorSettings
{
    view subview(identifier: "ColorSettings",
					child_horizontal: @align_fill,
					placement: @place_column,
					show_border: false,spacing: @unrelated_spacing,
					layout_theme: @dialog_large)
    {
		column(child_horizontal: @align_fill)
		{
			row(spacing: @related_spacing)
			{
				overlay(guide_mask: [@guide_label])
				{
					panel(bind: @SyncStatus,
							value: "SyncNotApplicable",
							margin: 0)
					{
						info_icon(icontype: "note",
									size: "large");
					}

					panel(bind: @SyncStatus,
							value: "InSync",
							margin: 0)
					{
						image(image: { normal: "SP_ColSettingsSynchronized_32x32_N.png", dark_normal: "SP_ColSettingsSynchronized_32x32_N_D.png" });
					}

					panel(bind: @SyncStatus,
							value: "OutOfSync",
							margin: 0)
					{
						image(image: { normal: "SP_ColSettingsUnsynchronized_32x32_N.png", dark_normal: "SP_ColSettingsUnsynchronized_32x32_N_D.png" });
					}
				}

				static_text(characters: 1,
							horizontal: @align_fill,
							name: @SyncStatusText,
							adjust_baseline_for_single_line_text: false);
			}

			row()
			{
				popup(identifier: "SettingsPopup",
						popup_maximum_width_chars: 18,
						popup_minimum_width_chars: 18,
						include_custom_item: false,
						items:	@SettingItems,
						set_default_focus: true,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/SettingsPopup=S&ettings:");

				button(identifier: "LoadButton",
						action: @Load,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/LoadButton=&Load...");

				button(identifier: "SaveButton",
						action: @Save,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/SaveButton=&Save...");
			}

		column(spacing: @inter_group_spacing,child_horizontal: @align_fill)
		{
			group(identifier: "WorkingSpacesGroup",
					header: 'display_text(identifier: "WorkingSpaceGroupHeaderText", horizontal: @align_left, 
											name:"$$$/_ColorConvdg/Dlg/BasicColorMatch/WSFrame=Working Spaces");')
			{
				popup(identifier: "RGBWorkingSpacePopup",
						popup_maximum_width_chars: 25,
						popup_minimum_width_chars: 25,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/RGBWSText=&RGB:");

				popup(identifier: "CMYKWorkingSpacePopup",
						popup_maximum_width_chars: 25,
						popup_minimum_width_chars: 25,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/CMYKWSText=&CMYK:");
			}


			group(identifier: "ColorManagementPoliciesGroup",
				header: 'display_text(identifier: "ColorManagementPoliciesGroupHeaderText", horizontal: @align_left, 
										name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/PolicyFrame=Color Management Policies");')
			{
				popup(identifier: "RGBPolicyPopup",
					bind: @RGBPolicy,
					disabled_items: @RGBPolicyDisabledItemsList,
					popup_maximum_width_chars: 25,
					popup_minimum_width_chars: 25,
					include_custom_item: false,
					items:	@RGBPolicyItems,
					name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/RGBPolicyText=RG&B:");

				row(horizontal: @align_fill)
				{
					image(identifier: "LockedImageInPolicyGroup",
						guide_mask: [@guide_label],
						image: { normal: "SP_ColorSettingsLocked_Md_N.png", dark_normal: "SP_ColorSettingsLocked_Md_N_D.png" });

					popup(identifier: "CMYKPolicyPopup",
						bind: @CMYKPolicy,
						popup_maximum_width_chars: 25,
						popup_minimum_width_chars: 25,
						include_custom_item: false,
						items: @CMYKPolicyItems,
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/CMYKPolicyText=C&MYK:");
				}

				row()
				{
					checkbox(identifier: "ProfileMismatchAskWhenOpeningCheckbox",
							bind: @AskWhenOpeningIfProfileMismatch,
							label: "$$$/_ColorConvdg/Dlg/BasicColorMatch/ProfileMismatchText=Profile Mismatches:",
							name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/AskOpenCheckbox=Ask When &Opening");

					checkbox(identifier: "ProfileMismatchAskWhenPastingCheckbox",
							bind: @AskWhenPastingIfProfileMismatch,
							name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/AskPasteCheckbox=Ask When &Pasting");
				}

				checkbox(identifier: "MissingProfilesAskWhenOpeningCheckbox",
						bind: @AskWhenOpeningIfProfileMissing,
						label: "$$$/_ColorConvdg/Dlg/BasicColorMatch/MissingProfilesText=Missing Profiles:",
						name: "$$$/_ColorConvdg/Dlg/BasicColorMatch/MissingAskOpenCheckbox=Ask When Openin&g");
			}

			optional(bind: @AdvancedMode,
					value: true,
					margin: 0)
			{
				group(identifier: "ConversionOptionsGroup",
					horizontal: @align_fill,
					header: 'display_text(identifier: "ConversionOptionsGroupHeaderText", horizontal: @align_left, 
											name: "$$$/_ColorConvdg/Dlg/AdvancedColorMatch/EngineFrame=Conversion Options");')
				{
					popup(identifier: "EnginePopup",
						popup_maximum_width_chars: 25,
						popup_minimum_width_chars: 25,
						name: "$$$/_ColorConvdg/Dlg/AdvancedColorMatch/EngineText=E&ngine:");

					popup(identifier: "RenderingIntentPopup",
						bind: @RenderingIntent,
						popup_maximum_width_chars: 25,
						popup_minimum_width_chars: 25,
						include_custom_item: false,
						items: @RenderingIntentItems,
						name: "$$$/_ColorConvdg/Dlg/AdvancedColorMatch/IntentText=&Intent:");

					checkbox(identifier: "UseBlackPointCompensationCheckbox",
							bind: @UseBlackPointCompensation,
							name: '$$$/_ColorConvdg/Dlg/AdvancedColorMatch/BPCCheckBox=&Use Black Point Compensation');
				}
			}

			panel(horizontal: @align_fill,
					child_vertical: @align_top,
					margin: 0,
					height: 40)
			{
				row( child_vertical: @align_top, spacing: @label_widget_spacing)
				{
					overlay(guide_mask: [@guide_baseline, @guide_label])
					{
						info_icon(identifier: "DescriptionInfoIcon",
									icontype:"note",
									size:"small");

						image(identifier: "LockedImageInDescriptionGroup",
								image: { normal: "SP_ColorSettingsLocked_Md_N.png", dark_normal: "SP_ColorSettingsLocked_Md_N_D.png" });
					}
					static_text(identifier: "DescriptionText",
								characters: 50,
								horizontal: @align_fill,
								theme_font_size: @small,
								name: @Description);
				}
			}
		}
	}
			separator(identifier: "OptionsStartSeparator");
			row(spacing: @separated_spacing)
			{
				toggle_button(identifier: "OptionsButton",
								bind: @AdvancedMode,
								spring_loaded: true,
								value_on: true,
								value_off: false,
								vertical: @align_fill,
								on_text: "$$$/_ColorConvdg/Dlg/BasicColorMatch/LessOptionsButton=Less Op&tions",
								off_text: "$$$/_ColorConvdg/Dlg/BasicColorMatch/MoreOptionsButton=More Op&tions",commit_button: true);

				row(horizontal: @align_right,
					spacing: @related_spacing,
					reverse: os == @mac)
				{ 
					button(default: true,
							commit_button: true,
							identifier: "okButton",
							name: "$$$/gOK=OK");

					button(cancel: true,
							commit_button: true,
							identifier: "cancelButton",
							name: "$$$/gCancel=Cancel");       
				}
			}
    }
}

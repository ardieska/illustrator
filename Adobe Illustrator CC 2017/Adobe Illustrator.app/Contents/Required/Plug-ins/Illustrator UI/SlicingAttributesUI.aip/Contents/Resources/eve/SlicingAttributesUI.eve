layout DivideSliceDialog
{
	view subview(identifier: "AIEveSubView",
	name: "$$$/slicingAttributes/Cap/16502=Divide Slice",
	placement: @place_column,
	show_border: false,
	layout_theme: @dialog_large,
	spacing:@unrelated_spacing,
	child_horizontal: @align_fill
	)
	{
		column(child_horizontal: @align_fill,spacing: @inter_group_spacing)
		{
			group(identifier: "divideHorizontalGroup",
			header: "checkbox(identifier: 'divideHorizontalIntoChkBx', horizontal: @align_left,
					name: '$$$/slicingAttributes/Dlg/16502/3=Divide &Horizontally into')",
				placement: @place_column,
				child_horizontal: @align_fill)
			{
				radiogroup()
				{
					row(child_vertical: @align_center, spacing: @label_widget_spacing)
					{
						radio_button(bind: @evenHorizontalRadioGp,
						identifier: "evenHorizontalRdBtn",                                 
						value: @slices);

						unit_hot_number(decimal_places: 4,
						identifier: "numEvensHorizontalNumberEdit",
						suffix: "$$$/slicingAttributes/Dlg/16502/8=slices down, evenly spaced",
						max_value: 5,
						min_value: 1,
						max_digits: 4);
					}

					row(child_vertical: @align_center, spacing: @label_widget_spacing)
					{
						radio_button(bind: @evenHorizontalRadioGp,
						identifier: "pixelHorizontalRdBtn",
						value: @pixels);

						unit_hot_number(decimal_places: 4,
						identifier: "numPixelsHorizontalNumberEdit",
						suffix: "$$$/slicingAttributes/Dlg/16502/9=pixels per slice",
						max_value: 1000,
						min_value: 1,
						max_digits: 4);
					}
				}                
			}

			group(identifier: "DivideVerticalGroup",
			header: "checkbox(identifier: 'divideVerticalIntoChkBx', horizontal: @align_left,
					name: '$$$/slicingAttributes/Dlg/16502/11=Divide &Vertically into')",
				placement: @place_column,
				child_horizontal: @align_fill)
			{
				radiogroup()
				{
					row(child_vertical: @align_center, spacing: @label_widget_spacing)
					{
						radio_button(bind: @evenVerticalRadioGp,
						identifier: "evenVerticalRdBtn",                                 
						value: @slices);

						unit_hot_number(decimal_places: 4,
						identifier: "numEvensVerticalNumberEdit",
						suffix: "$$$/slicingAttributes/Dlg/16502/16=slices across, evenly spaced",
						max_value: 5,
						min_value: 1,
						max_digits: 4);
					}

					row(child_vertical: @align_center, spacing: @label_widget_spacing)
					{
						radio_button(bind: @evenVerticalRadioGp,
						identifier: "pixelVerticalRdBtn",
						value: @pixels);

						unit_hot_number(decimal_places: 4,
						identifier: "numPixelsVerticalNumberEdit",
						suffix: "$$$/slicingAttributes/Dlg/16502/17=pixels per slice",
						max_value: 1000,
						min_value: 1,
						max_digits: 4);
					}                
				}	
			}
		}
			row(vertical: @align_fill,child_horizontal: @align_fill, child_vertical: @align_center,spacing: @separated_spacing)
			{
				
					checkbox(name: '$$$/slicingAttributes/Dlg/16502/19=&Preview', 
					identifier: "previewChkBox",
					guide_mask:[@guide_label]);
				
			row(child_horizontal: @align_right, reverse: os==@mac, spacing: @related_spacing)
			{
				button(default: true,
				identifier: "okButton",
				name: "$$$/gOK=OK",
				commit_button: true);	
				
				button(cancel: true,
				identifier: "cancelButton",
				name: "$$$/gCancel=Cancel",
				commit_button: true);													
			}
		 }
	}
}
